{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online Store\\\\client\\\\src\\\\components\\\\shop\\\\auth\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Navigate, useLocation, Outlet } from \"react-router-dom\";\nimport { isAuthenticate } from \"./fetchApi\";\nconst ProtectedRoute = () => {\n  const location = useLocation();\n  return isAuthenticate() ? /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    },\n    replace: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  });\n};\nexport default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","Outlet","isAuthenticate","ProtectedRoute","location","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace"],"sources":["D:/Online Store/client/src/components/shop/auth/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\nimport { Navigate, useLocation, Outlet } from \"react-router-dom\";\nimport { isAuthenticate } from \"./fetchApi\";\n\nconst ProtectedRoute = () => {\n  const location = useLocation();\n\n  return isAuthenticate() ? (\n    <Outlet />\n  ) : (\n    <Navigate to=\"/\" state={{ from: location }} replace />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAChE,SAASC,cAAc,QAAQ,YAAY;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9B,OAAOE,cAAc,CAAC,CAAC,gBACrBJ,KAAA,CAAAO,aAAA,CAACJ,MAAM;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAEVb,KAAA,CAAAO,aAAA,CAACN,QAAQ;IAACa,EAAE,EAAC,GAAG;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAEV;IAAS,CAAE;IAACW,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACtD;AACH,CAAC;AAED,eAAeR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}