{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/product\";\n\n// ðŸ“Œ Get All Products\nexport const getAllProduct = async () => {\n  try {\n    const res = await fetch(`${API_URL}/all-product`);\n    return await res.json();\n  } catch (error) {\n    console.error(\"Get All Products Error:\", error);\n  }\n};\n\n// ðŸ“Œ Create Product\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n  topCollection,\n  solarPerfume,\n  discount,\n  seasonalProduct,\n  animation\n}) => {\n  const formData = new FormData();\n\n  // Handle multiple image files\n  if (Array.isArray(pImage)) {\n    for (const file of pImage) {\n      formData.append(\"pImage\", file);\n    }\n  }\n\n  // Append other fields\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n  formData.append(\"topCollection\", topCollection);\n  formData.append(\"solarPerfume\", solarPerfume);\n  formData.append(\"discount\", discount);\n  formData.append(\"seasonalProduct\", seasonalProduct);\n  formData.append(\"animation\", animation);\n  try {\n    const res = await fetch(`${API_URL}/add-product`, {\n      method: \"POST\",\n      body: formData\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Create Product Error:\", error);\n    return {\n      error: \"Failed to create product\"\n    };\n  }\n};\n\n// ðŸ“Œ Edit Product\nexport const editProduct = async product => {\n  const formData = new FormData();\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id || product.pCategory);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages); // comma-separated string of existing images\n  formData.append(\"topCollection\", product.topCollection);\n  formData.append(\"solarPerfume\", product.solarPerfume);\n  formData.append(\"discount\", product.discount);\n  formData.append(\"seasonalProduct\", product.seasonalProduct);\n  formData.append(\"animation\", product.animation);\n  try {\n    const res = await fetch(`${API_URL}/edit-product`, {\n      method: \"POST\",\n      body: formData\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Edit Product Error:\", error);\n    return {\n      error: \"Failed to edit product\"\n    };\n  }\n};\n\n// ðŸ“Œ Delete Product\nexport const deleteProduct = async pId => {\n  try {\n    const res = await fetch(`${API_URL}/delete-product`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pId\n      })\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Delete Product Error:\", error);\n  }\n};\n\n// ðŸ“Œ Products by Category\nexport const productByCategory = async catId => {\n  try {\n    const res = await fetch(`${API_URL}/product-by-category`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        catId\n      })\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Product by Category Error:\", error);\n  }\n};\n\n// ðŸ“Œ Products by Price\nexport const productByPrice = async price => {\n  try {\n    const res = await fetch(`${API_URL}/product-by-price`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        price\n      })\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Product by Price Error:\", error);\n  }\n};","map":{"version":3,"names":["API_URL","getAllProduct","res","fetch","json","error","console","createProduct","pName","pDescription","pImage","pStatus","pCategory","pQuantity","pPrice","pOffer","topCollection","solarPerfume","discount","seasonalProduct","animation","formData","FormData","Array","isArray","file","append","method","body","editProduct","product","pEditImages","pId","_id","pImages","deleteProduct","headers","JSON","stringify","productByCategory","catId","productByPrice","price"],"sources":["D:/Online Store/dashboard/src/components/admin/products/FetchApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000/api/product\";\n\n// ðŸ“Œ Get All Products\nexport const getAllProduct = async () => {\n  try {\n    const res = await fetch(`${API_URL}/all-product`);\n    return await res.json();\n  } catch (error) {\n    console.error(\"Get All Products Error:\", error);\n  }\n};\n\n// ðŸ“Œ Create Product\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n  topCollection,\n  solarPerfume,\n  discount,\n  seasonalProduct,\n  animation,\n}) => {\n  const formData = new FormData();\n\n  // Handle multiple image files\n  if (Array.isArray(pImage)) {\n    for (const file of pImage) {\n      formData.append(\"pImage\", file);\n    }\n  }\n\n  // Append other fields\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n  formData.append(\"topCollection\", topCollection);\n  formData.append(\"solarPerfume\", solarPerfume);\n  formData.append(\"discount\", discount);\n  formData.append(\"seasonalProduct\", seasonalProduct);\n  formData.append(\"animation\", animation);\n\n  try {\n    const res = await fetch(`${API_URL}/add-product`, {\n      method: \"POST\",\n      body: formData,\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Create Product Error:\", error);\n    return { error: \"Failed to create product\" };\n  }\n};\n\n// ðŸ“Œ Edit Product\nexport const editProduct = async (product) => {\n  const formData = new FormData();\n\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id || product.pCategory);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages); // comma-separated string of existing images\n  formData.append(\"topCollection\", product.topCollection);\n  formData.append(\"solarPerfume\", product.solarPerfume);\n  formData.append(\"discount\", product.discount);\n  formData.append(\"seasonalProduct\", product.seasonalProduct);\n  formData.append(\"animation\", product.animation);\n\n  try {\n    const res = await fetch(`${API_URL}/edit-product`, {\n      method: \"POST\",\n      body: formData,\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Edit Product Error:\", error);\n    return { error: \"Failed to edit product\" };\n  }\n};\n\n// ðŸ“Œ Delete Product\nexport const deleteProduct = async (pId) => {\n  try {\n    const res = await fetch(`${API_URL}/delete-product`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ pId }),\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Delete Product Error:\", error);\n  }\n};\n\n// ðŸ“Œ Products by Category\nexport const productByCategory = async (catId) => {\n  try {\n    const res = await fetch(`${API_URL}/product-by-category`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ catId }),\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Product by Category Error:\", error);\n  }\n};\n\n// ðŸ“Œ Products by Price\nexport const productByPrice = async (price) => {\n  try {\n    const res = await fetch(`${API_URL}/product-by-price`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ price }),\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(\"Product by Price Error:\", error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}