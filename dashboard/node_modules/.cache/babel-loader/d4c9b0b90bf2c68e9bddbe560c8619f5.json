{"ast":null,"code":"import axios from \"axios\";\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`http://localhost:8000/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPorductImage = async ({\n  pImage\n}) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n  topCollection,\n  solarPerfume,\n  discount,\n  seasonalProduct,\n  animation\n}) => {\n  const formData = new FormData();\n\n  // Append all images\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n\n  // Append all fields\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n  formData.append(\"topCollection\", topCollection);\n  formData.append(\"solarPerfume\", solarPerfume);\n  formData.append(\"discount\", discount);\n  formData.append(\"seasonalProduct\", seasonalProduct);\n  formData.append(\"animation\", animation);\n  try {\n    const res = await axios.post(`http://localhost:8000/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Create Product Error:\", error);\n    return {\n      error: \"Failed to create product\"\n    };\n  }\n};\nexport const editProduct = async product => {\n  const formData = new FormData();\n\n  // Optional: append new uploaded images\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n\n  // Append all product fields\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id || product.pCategory);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages); // This should be comma-separated string of existing images\n\n  // Append new flags\n  formData.append(\"topCollection\", product.topCollection);\n  formData.append(\"solarPerfume\", product.solarPerfume);\n  formData.append(\"discount\", product.discount);\n  formData.append(\"seasonalProduct\", product.seasonalProduct);\n  formData.append(\"animation\", product.animation);\n  try {\n    const res = await axios.post(`http://localhost:8000/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Edit Product Error:\", error);\n    return {\n      error: \"Failed to edit product\"\n    };\n  }\n};\nexport const deleteProduct = async pId => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/delete-product`, {\n      pId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByCategory = async catId => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/product-by-category`, {\n      catId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByPrice = async price => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/product-by-price`, {\n      price\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","getAllProduct","res","get","data","error","console","log","createPorductImage","pImage","formData","FormData","file","append","createProduct","pName","pDescription","pStatus","pCategory","pQuantity","pPrice","pOffer","topCollection","solarPerfume","discount","seasonalProduct","animation","post","editProduct","product","pEditImages","pId","_id","pImages","deleteProduct","productByCategory","catId","productByPrice","price"],"sources":["D:/Online Store/dashboard/src/components/admin/products/FetchApi.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`http://localhost:8000/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPorductImage = async ({ pImage }) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\n\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n  topCollection,\n  solarPerfume,\n  discount,\n  seasonalProduct,\n  animation,\n}) => {\n  const formData = new FormData();\n\n  // Append all images\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n\n  // Append all fields\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n  formData.append(\"topCollection\", topCollection);\n  formData.append(\"solarPerfume\", solarPerfume);\n  formData.append(\"discount\", discount);\n  formData.append(\"seasonalProduct\", seasonalProduct);\n  formData.append(\"animation\", animation);\n\n  try {\n    const res = await axios.post(`http://localhost:8000/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Create Product Error:\", error);\n    return { error: \"Failed to create product\" };\n  }\n};\n\nexport const editProduct = async (product) => {\n  const formData = new FormData();\n\n  // Optional: append new uploaded images\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n\n  // Append all product fields\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id || product.pCategory);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages); // This should be comma-separated string of existing images\n\n  // Append new flags\n  formData.append(\"topCollection\", product.topCollection);\n  formData.append(\"solarPerfume\", product.solarPerfume);\n  formData.append(\"discount\", product.discount);\n  formData.append(\"seasonalProduct\", product.seasonalProduct);\n  formData.append(\"animation\", product.animation);\n\n  try {\n    const res = await axios.post(`http://localhost:8000/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Edit Product Error:\", error);\n    return { error: \"Failed to edit product\" };\n  }\n};\n\n\nexport const deleteProduct = async (pId) => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/delete-product`, { pId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByCategory = async (catId) => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/product-by-category`, {\n      catId,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByPrice = async (price) => {\n  try {\n    let res = await axios.post(`http://localhost:8000/api/product/product-by-price`, {\n      price,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}