{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst messageSlice = createSlice({\n  name: \"messages\",\n  initialState: {\n    loading: false,\n    messages: [],\n    error: null,\n    message: null\n  },\n  reducers: {\n    getAllMessagesRequest(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    getAllMessagesSuccess(state, action) {\n      state.messages = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getAllMessagesFailed(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteMessageRequest(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteMessageSuccess(state, action) {\n      state.loading = false;\n      state.message = action.payload;\n    },\n    deleteMessageFailed(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    resetMessageSlice(state) {\n      state.error = null;\n      state.message = null;\n      state.loading = false;\n    },\n    clearAllErrors(state) {\n      state.error = null;\n    }\n  }\n});\nexport const getAllMessages = () => async dispatch => {\n  dispatch(messageSlice.actions.getAllMessagesRequest());\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:8000/api/message/admin/messages\", {\n      withCredentials: true\n    });\n    dispatch(messageSlice.actions.getAllMessagesSuccess(data.messages));\n  } catch (err) {\n    var _err$response, _err$response$data;\n    dispatch(messageSlice.actions.getAllMessagesFailed((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Something went wrong\"));\n  }\n};\nexport const deleteMessage = id => async dispatch => {\n  dispatch(messageSlice.actions.deleteMessageRequest());\n  try {\n    const {\n      data\n    } = await axios.delete(`http://localhost:8000/api/message/admin/delete/${id}`, {\n      withCredentials: true\n    });\n    dispatch(messageSlice.actions.deleteMessageSuccess(data.message));\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    dispatch(messageSlice.actions.deleteMessageFailed((err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Something went wrong\"));\n  }\n};\nexport const clearAllMessageErrors = () => dispatch => {\n  dispatch(messageSlice.actions.clearAllErrors());\n};\nexport const resetMessagesSlice = () => dispatch => {\n  dispatch(messageSlice.actions.resetMessageSlice());\n};\nexport default messageSlice.reducer;","map":{"version":3,"names":["createSlice","axios","messageSlice","name","initialState","loading","messages","error","message","reducers","getAllMessagesRequest","state","getAllMessagesSuccess","action","payload","getAllMessagesFailed","deleteMessageRequest","deleteMessageSuccess","deleteMessageFailed","resetMessageSlice","clearAllErrors","getAllMessages","dispatch","actions","data","get","withCredentials","err","_err$response","_err$response$data","response","deleteMessage","id","delete","_err$response2","_err$response2$data","clearAllMessageErrors","resetMessagesSlice","reducer"],"sources":["D:/Online Store/dashboard/src/components/admin/messages/messageSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst messageSlice = createSlice({\r\n  name: \"messages\",\r\n  initialState: {\r\n    loading: false,\r\n    messages: [],\r\n    error: null,\r\n    message: null,\r\n  },\r\n  reducers: {\r\n    getAllMessagesRequest(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getAllMessagesSuccess(state, action) {\r\n      state.messages = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getAllMessagesFailed(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    deleteMessageRequest(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    deleteMessageSuccess(state, action) {\r\n      state.loading = false;\r\n      state.message = action.payload;\r\n    },\r\n    deleteMessageFailed(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    resetMessageSlice(state) {\r\n      state.error = null;\r\n      state.message = null;\r\n      state.loading = false;\r\n    },\r\n    clearAllErrors(state) {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const getAllMessages = () => async (dispatch) => {\r\n  dispatch(messageSlice.actions.getAllMessagesRequest());\r\n  try {\r\n    const { data } = await axios.get(\"http://localhost:8000/api/message/admin/messages\", {\r\n      withCredentials: true,\r\n    });\r\n    dispatch(messageSlice.actions.getAllMessagesSuccess(data.messages));\r\n  } catch (err) {\r\n    dispatch(\r\n      messageSlice.actions.getAllMessagesFailed(\r\n        err?.response?.data?.message || \"Something went wrong\"\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteMessage = (id) => async (dispatch) => {\r\n  dispatch(messageSlice.actions.deleteMessageRequest());\r\n  try {\r\n    const { data } = await axios.delete(`http://localhost:8000/api/message/admin/delete/${id}`, {\r\n      withCredentials: true,\r\n    });\r\n    dispatch(messageSlice.actions.deleteMessageSuccess(data.message));\r\n  } catch (err) {\r\n    dispatch(\r\n      messageSlice.actions.deleteMessageFailed(\r\n        err?.response?.data?.message || \"Something went wrong\"\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport const clearAllMessageErrors = () => (dispatch) => {\r\n  dispatch(messageSlice.actions.clearAllErrors());\r\n};\r\n\r\nexport const resetMessagesSlice = () => (dispatch) => {\r\n  dispatch(messageSlice.actions.resetMessageSlice());\r\n};\r\n\r\nexport default messageSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,qBAAqBA,CAACC,KAAK,EAAE;MAC3BA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDK,qBAAqBA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACnCF,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,oBAAoBA,CAACJ,KAAK,EAAEE,MAAM,EAAE;MAClCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,oBAAoBA,CAACL,KAAK,EAAE;MAC1BA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDU,oBAAoBA,CAACN,KAAK,EAAEE,MAAM,EAAE;MAClCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACH,OAAO,GAAGK,MAAM,CAACC,OAAO;IAChC,CAAC;IACDI,mBAAmBA,CAACP,KAAK,EAAEE,MAAM,EAAE;MACjCF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDK,iBAAiBA,CAACR,KAAK,EAAE;MACvBA,KAAK,CAACJ,KAAK,GAAG,IAAI;MAClBI,KAAK,CAACH,OAAO,GAAG,IAAI;MACpBG,KAAK,CAACN,OAAO,GAAG,KAAK;IACvB,CAAC;IACDe,cAAcA,CAACT,KAAK,EAAE;MACpBA,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMc,cAAc,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACtDA,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACb,qBAAqB,CAAC,CAAC,CAAC;EACtD,IAAI;IACF,MAAM;MAAEc;IAAK,CAAC,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,kDAAkD,EAAE;MACnFC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFJ,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACX,qBAAqB,CAACY,IAAI,CAAClB,QAAQ,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOqB,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZP,QAAQ,CACNpB,YAAY,CAACqB,OAAO,CAACR,oBAAoB,CACvC,CAAAY,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeJ,IAAI,cAAAK,kBAAA,uBAAnBA,kBAAA,CAAqBrB,OAAO,KAAI,sBAClC,CACF,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAMuB,aAAa,GAAIC,EAAE,IAAK,MAAOV,QAAQ,IAAK;EACvDA,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACP,oBAAoB,CAAC,CAAC,CAAC;EACrD,IAAI;IACF,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMvB,KAAK,CAACgC,MAAM,CAAC,kDAAkDD,EAAE,EAAE,EAAE;MAC1FN,eAAe,EAAE;IACnB,CAAC,CAAC;IACFJ,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACN,oBAAoB,CAACO,IAAI,CAAChB,OAAO,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOmB,GAAG,EAAE;IAAA,IAAAO,cAAA,EAAAC,mBAAA;IACZb,QAAQ,CACNpB,YAAY,CAACqB,OAAO,CAACL,mBAAmB,CACtC,CAAAS,GAAG,aAAHA,GAAG,wBAAAO,cAAA,GAAHP,GAAG,CAAEG,QAAQ,cAAAI,cAAA,wBAAAC,mBAAA,GAAbD,cAAA,CAAeV,IAAI,cAAAW,mBAAA,uBAAnBA,mBAAA,CAAqB3B,OAAO,KAAI,sBAClC,CACF,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAM4B,qBAAqB,GAAGA,CAAA,KAAOd,QAAQ,IAAK;EACvDA,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACH,cAAc,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,OAAO,MAAMiB,kBAAkB,GAAGA,CAAA,KAAOf,QAAQ,IAAK;EACpDA,QAAQ,CAACpB,YAAY,CAACqB,OAAO,CAACJ,iBAAiB,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,eAAejB,YAAY,CAACoC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}